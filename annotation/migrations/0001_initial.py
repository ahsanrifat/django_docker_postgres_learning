# Generated by Django 4.1.3 on 2022-11-19 17:12

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annotator_id', models.IntegerField()),
                ('is_annotated', models.BooleanField(default=False)),
                ('is_accurate', models.BooleanField(blank=True, default=None, null=True)),
                ('is_skipped', models.BooleanField(default=False)),
                ('is_rejected', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('span_lines', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True), default=[], size=50)),
            ],
            options={
                'db_table': 'annotation',
            },
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=50, unique=True)),
                ('project_id', models.IntegerField()),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_done', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'data',
            },
        ),
        migrations.CreateModel(
            name='Validation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validator_id', models.IntegerField()),
                ('is_validated', models.BooleanField(default=False)),
                ('is_skipped', models.BooleanField(default=False)),
                ('is_rejected', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('span_lines', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True), default=[], size=50)),
                ('data', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='validation', to='annotation.data')),
            ],
            options={
                'db_table': 'validation',
            },
        ),
        migrations.AddIndex(
            model_name='data',
            index=models.Index(fields=['is_done'], name='data_is_done_indx'),
        ),
        migrations.AddIndex(
            model_name='data',
            index=models.Index(fields=['project_id', 'group_id'], name='pid_gid_indx'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='data',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annotation', to='annotation.data'),
        ),
        migrations.AddIndex(
            model_name='validation',
            index=models.Index(fields=['validator_id'], name='validator_id'),
        ),
        migrations.AddIndex(
            model_name='validation',
            index=models.Index(fields=['is_validated'], name='is_validated_indx'),
        ),
        migrations.AddIndex(
            model_name='validation',
            index=models.Index(fields=['data'], name='data_val_indx'),
        ),
        migrations.AddIndex(
            model_name='annotation',
            index=models.Index(fields=['is_annotated'], name='is_annotated_indx'),
        ),
        migrations.AddIndex(
            model_name='annotation',
            index=models.Index(fields=['annotator_id'], name='annotator_id'),
        ),
        migrations.AddIndex(
            model_name='annotation',
            index=models.Index(fields=['data'], name='data_ann_indx'),
        ),
    ]
